{"version":3,"file":"static/js/390.61979939.chunk.js","mappings":"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","sources":["redux/profile/actions.js","components/Profile/MyPosts/Post/Post.jsx","redux/profile/selectors.js","webpack://my-app/./src/components/Profile/MyPosts/AddPostForm/AddPostForm.module.css?7b47","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?c3a9","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfoItem/ProfileInfoItem.module.css?1b80","components/Profile/ProfileInfo/ProfileInfoItem/ProfileInfoItem.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","redux/profile/thunks.js","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import { ADD_POST, DELETE_POST, SET_USER_PROFILE, SET_USER_STATUS } from \"./actionTypes\";\r\n\r\nexport const addPostAC = (newPostText) => ({\r\n  type: ADD_POST,\r\n  newPostText,\r\n});\r\n\r\nexport const deletePostAC = (postid) => ({\r\n  type: DELETE_POST,\r\n  postid\r\n});\r\n\r\nexport const setUserProfileAC = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n});\r\n\r\nexport const setUserStatusAC = (status) => ({\r\n  type: SET_USER_STATUS,\r\n  status,\r\n});\r\n","import './Post.css';\r\n\r\nconst avatar = require('../../../../assets/images/black.png');\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <article className='post'>\r\n      <img src={avatar} className='avatar' alt=\"Avatar\" />\r\n      <span className='post__text'>{ props.message }</span>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Post;","export const getProfilePage = (state) => state.profilePage;\r\n\r\nexport const getPosts = (state) => getProfilePage(state).posts;\r\n\r\nexport const getProfileSelector = (state) => getProfilePage(state).profile;\r\n\r\nexport const getStatusSelector = (state) => getProfilePage(state).status;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AddPostForm_form__ubZSh\",\"form__textarea\":\"AddPostForm_form__textarea__DsVjx\",\"form__submit\":\"AddPostForm_form__submit__M6sjm\"};","import { Field, reduxForm } from 'redux-form'\r\n\r\nimport s from './AddPostForm.module.css';\r\nimport Button from '../../../common/Button/Button';\r\nimport { maxLengthValidate, required } from '../../../../utils/validators/validators';\r\nimport { FormControl } from '../../../common/FormsControls/FormsControls';\r\n\r\nconst Textarea = FormControl(\"textarea\");\r\nconst maxLength = maxLengthValidate(255);\r\n\r\nconst AddPostForm = ({handleSubmit}) => {\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <Field\r\n        id=\"newPostText\"\r\n        name=\"newPostText\"\r\n        component={Textarea}\r\n        classElement={`textarea ${s.form__textarea}`}\r\n        placeholder='Что у вас нового?'\r\n        validate={[required, maxLength]}\r\n      />\r\n\r\n      <Button\r\n        text=\"Отправить\"\r\n        className={s.form__submit}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({ form: 'add-post' })(AddPostForm);","import { addPostAC } from '../../../redux/profile/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport './MyPosts.css';\r\nimport Post from './Post/Post'\r\nimport { getPosts } from '../../../redux/profile/selectors';\r\nimport AddPostForm from './AddPostForm/AddPostForm';\r\n\r\nconst MyPosts = () => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector(getPosts);\r\n\r\n  const onSubmit = (formData) => {\r\n    dispatch(addPostAC(formData.newPostText));\r\n  }\r\n\r\n  const postsElements = posts.map(post =>\r\n    <Post postid={post.postid} message={post.message} key={post.postid} />)\r\n\r\n  return (\r\n    <div className='posts-container'>\r\n      <h3 className='posts-container__title'>\r\n        My posts\r\n      </h3>\r\n\r\n      <div className='new-post-container'>\r\n        <AddPostForm onSubmit={onSubmit} />\r\n      </div>\r\n\r\n      <section className='post-list'>\r\n        {postsElements}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPosts;","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__m7xWq\",\"status__label\":\"ProfileStatus_status__label__jkbhY\",\"status__input\":\"ProfileStatus_status__input__m64V+\"};","import { useEffect, useState } from 'react';\r\nimport s from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatus = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateUserStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (evt) => {\r\n    setStatus(evt.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div className={s.status}>\r\n      <span className={s.status__label}>\r\n        {props.label}\r\n      </span>\r\n      {\r\n        editMode ?\r\n          <input\r\n            autoFocus\r\n            className={s.status__input}\r\n            value={status}\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n          />\r\n          :\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || 'Нет'}\r\n          </span>\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ProfileStatus;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ProfileInfoItem_item__DEWdm\",\"item__label\":\"ProfileInfoItem_item__label__yVu12\",\"contacts\":\"ProfileInfoItem_contacts__W9AMW\"};","import s from './ProfileInfoItem.module.css'\r\n\r\nconst ProfileInfoItem = (props) => {\r\n  return (\r\n    <div className={`${s.item} ${props.contacts && s.contacts}`}>\r\n      <span className={s.item__label}>\r\n        {`${props.label}: `}\r\n      </span>\r\n      <span className={s.item__value}>\r\n        {props.value}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfoItem;","import './ProfileInfo.css'\r\nimport avatar from '../../../assets/images/black.png';\r\nimport Loader from '../../common/Loader/Loader';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport ProfileInfoItem from './ProfileInfoItem/ProfileInfoItem';\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus}) => {\r\n  if (!profile) {\r\n    return <Loader />\r\n  }\r\n\r\n  const translations = {\r\n    aboutMe: 'Обо мне',\r\n    lookingForAJob: 'Ищу работу',\r\n    lookingForAJobDescription: 'Описание поиска работы'\r\n  };\r\n\r\n  const profileInfo = {\r\n    aboutMe: profile.aboutMe || 'Нет',\r\n    lookingForAJob: profile.lookingForAJob ? 'Да' : 'Нет',\r\n    lookingForAJobDescription: profile.lookingForAJobDescription || 'Нет',\r\n  }\r\n\r\n  const profileContacts = {\r\n    vk: profile.contacts.vk || '-',\r\n    facebook: profile.contacts.facebook || '-',\r\n    twitter: profile.contacts.twitter || '-',\r\n    instagram: profile.contacts.instagram || '-',\r\n    github: profile.contacts.github || '-',\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"profile-info\">\r\n        <div className=\"profile-info__avatar\">\r\n          <img src={profile.photos.small || avatar} alt=\"Avatar\" />\r\n        </div>\r\n\r\n        <div>\r\n          <h2 className=\"profile-info__title\">\r\n            {profile.fullName || 'Имя пользователя'}\r\n          </h2>\r\n\r\n          <div className=\"profile-info__description\">\r\n            <ProfileStatus\r\n              label='Статус: '\r\n              status={status}\r\n              updateUserStatus={updateUserStatus}\r\n            />\r\n            {\r\n              Object.entries(profileInfo).map(([key, value], index) =>\r\n                <ProfileInfoItem \r\n                  label={translations[key]} \r\n                  value={value} \r\n                  key={index} \r\n                />\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='profile-contacts'>\r\n        <h3 className='profile-contacts__title'>Контакты</h3>\r\n        {\r\n          Object.entries(profileContacts).map(([key, value], index) =>\r\n            <ProfileInfoItem \r\n              contacts\r\n              label={key} \r\n              value={value} \r\n              key={index} \r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = ({profile, status, updateUserStatus}) => {\r\n  return (\r\n    <section className=\"profile\">\r\n      <ProfileInfo \r\n        profile={profile}\r\n        status={status}\r\n        updateUserStatus={updateUserStatus}\r\n      />\r\n      <MyPosts />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Profile;","import { profileAPI } from \"../../api/api\";\r\nimport { setUserProfileAC, setUserStatusAC } from \"./actions\";\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n  const data = await profileAPI.getProfile(userId);\r\n  dispatch(setUserProfileAC(data));\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n  const data = await profileAPI.getUserStatus(userId);\r\n  dispatch(setUserStatusAC(data.data));\r\n};\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n  const res = await profileAPI.updateUserStatus(status);\r\n  if (res.data.resultCode === 0) {\r\n    dispatch(setUserStatusAC(status));\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Profile from './Profile';\r\nimport { getProfile, getUserStatus, updateUserStatus } from '../../redux/profile/thunks';\r\nimport withRouter from '../../utils/withRouter';\r\nimport withAuthRedirect from '../../utils/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getProfileSelector, getStatusSelector } from '../../redux/profile/selectors';\r\nimport { getCurrentUserId } from '../../redux/auth/selectors';\r\n\r\nconst ProfileContainer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const profile = useSelector(getProfileSelector);\r\n  const status = useSelector(getStatusSelector);\r\n  const currentUserId = useSelector(getCurrentUserId);\r\n\r\n  useEffect(() => {\r\n    const userId = props.router.params.userId || currentUserId;\r\n    dispatch(getProfile(userId));\r\n    dispatch(getUserStatus(userId));\r\n  }, []);\r\n\r\n  const updateStatus = (status) => {\r\n    dispatch(updateUserStatus(status));\r\n  }\r\n\r\n  return (\r\n    <Profile\r\n      profile={profile}\r\n      status={status}\r\n      updateUserStatus={updateStatus}\r\n    />\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);"],"names":["setUserStatusAC","status","type","SET_USER_STATUS","avatar","require","props","_jsxs","className","children","_jsx","src","alt","message","getProfilePage","state","profilePage","getPosts","posts","getProfileSelector","profile","getStatusSelector","Textarea","FormControl","maxLength","maxLengthValidate","reduxForm","form","_ref","handleSubmit","s","onSubmit","Field","id","name","component","classElement","placeholder","validate","required","Button","text","MyPosts","dispatch","useDispatch","postsElements","useSelector","map","post","Post","postid","AddPostForm","formData","newPostText","ADD_POST","editMode","setEditMode","useState","setStatus","useEffect","label","autoFocus","value","onChange","evt","currentTarget","onBlur","deactivateEditMode","updateUserStatus","onDoubleClick","activateEditMode","item","contacts","item__label","item__value","Loader","translations","aboutMe","lookingForAJob","lookingForAJobDescription","profileInfo","profileContacts","vk","facebook","twitter","instagram","github","photos","small","fullName","ProfileStatus","Object","entries","_ref2","index","key","ProfileInfoItem","_ref3","ProfileInfo","getProfile","userId","async","data","profileAPI","SET_USER_PROFILE","compose","withRouter","withAuthRedirect","currentUserId","getCurrentUserId","router","params","getUserStatus","Profile","resultCode"],"sourceRoot":""}