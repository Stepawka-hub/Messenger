{"version":3,"file":"static/js/671.4a505fde.chunk.js","mappings":"8JAGA,MAUA,EAVmBA,IAAe,IAAd,OAACC,GAAOD,EAC1B,MAAME,EAAO,YAAcD,EAAOE,SAElC,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAIJ,EAAMK,UAAU,oBAAmBC,SAC5CP,EAAOQ,UACD,ECWd,EAlBgBT,IAAgB,IAAf,QAACU,GAAQV,EACxB,OACEW,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,UAASC,SAAA,EACtBJ,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAAA,OAAKQ,IAAKF,EAAQG,OAAQN,UAAU,SAASO,IAAI,cAEnDH,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEJ,EAAAA,EAAAA,KAAA,MAAIG,UAAU,kBAAiBC,SAC5BE,EAAQD,YAEXL,EAAAA,EAAAA,KAAA,QAAMG,UAAU,gBAAeC,SAC5BE,EAAQK,YAGT,E,+CCfV,QAAuB,8BAAvB,EAAsE,wCAAtE,EAA6H,sC,iCCK7H,MAAMC,GAAWC,EAAAA,EAAAA,GAAY,YACvBC,GAAYC,EAAAA,EAAAA,GAAkB,MAqBpC,GAAeC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,gBAAjC,EAnBwBrB,IAAqB,IAApB,aAACsB,GAAatB,EACrC,OACEW,EAAAA,EAAAA,MAAA,QAAMJ,UAAWgB,EAAQC,SAAUF,EAAad,SAAA,EAC9CJ,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CACJC,GAAG,iBACHC,KAAK,iBACLC,UAAWZ,EACXa,aAAc,YAAYN,IAC1BO,YAAY,uGACZC,SAAU,CAACC,EAAAA,GAAUd,MAEvBd,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CACLlB,KAAK,yDACLR,UAAWgB,MAEP,ICxBCW,EAAkBC,GAAUA,EAAMC,YC4C/C,GAAeC,EAAAA,EAAAA,IAjCCC,KACd,MAAMC,GAAWC,EAAAA,EAAAA,MACXJ,GAAcK,EAAAA,EAAAA,IAAYP,GAE1BQ,EAAkBN,EAAYO,QAAQC,KAAI3C,IAC9CG,EAAAA,EAAAA,KAACyC,EAAU,CAAC5C,OAAQA,GAAaA,EAAOE,YAEpC2C,EAAmBV,EAAYW,SAASH,KAAIlC,IAChDN,EAAAA,EAAAA,KAAC4C,EAAO,CAACtC,QAASA,GAAcA,EAAQuC,SAM1C,OACEtC,EAAAA,EAAAA,MAAA,WAASJ,UAAU,UAASC,SAAA,EAC1BJ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaC,SACzBkC,KAGH/B,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,iBAAgBC,SAAA,EAC7BJ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUC,SACtBsC,KAGH1C,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaC,UAC1BJ,EAAAA,EAAAA,KAAC8C,EAAe,CAAC1B,SAhBP2B,ICnBUC,MDoB1Bb,GCpB0Ba,EDoBHD,EAASC,eCpBQ,CAC1CC,KAAMC,EAAAA,EACNF,mBDkBkD,WAkBtC,G","sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","webpack://my-app/./src/components/Dialogs/SendMessageForm/SendMessageForm.module.css?bed0","components/Dialogs/SendMessageForm/SendMessageForm.jsx","redux/dialogs/selectors.js","components/Dialogs/Dialogs.jsx","redux/dialogs/actions.js"],"sourcesContent":["import './DialogItem.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = ({dialog}) => {\r\n  const path = '/dialogs/' + dialog.dialogid;\r\n\r\n  return (\r\n    <NavLink to={path} className='dialog-list__item'>\r\n      { dialog.username }\r\n    </NavLink>\r\n  );\r\n}\r\n\r\nexport default DialogItem;","import './Message.css';\r\n\r\nconst Message = ({message}) => {\r\n  return (\r\n    <div className=\"message\">\r\n      <div>\r\n        <img src={message.avatar} className=\"avatar\" alt=\"Avatar\" />\r\n      </div>\r\n      <div>\r\n        <h4 className=\"message__author\">\r\n          {message.username}\r\n        </h4>\r\n        <span className=\"message__text\">\r\n          {message.text}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SendMessageForm_form__2R83A\",\"form__textarea\":\"SendMessageForm_form__textarea__NCAd8\",\"form__submit\":\"SendMessageForm_form__submit__URy5k\"};","import { Field, reduxForm } from 'redux-form';\r\nimport s from './SendMessageForm.module.css';\r\nimport Button from '../../common/Button/Button';\r\nimport { FormControl } from '../../common/FormsControls/FormsControls';\r\nimport { maxLengthValidate, required } from '../../../utils/validators/validators';\r\n\r\nconst Textarea = FormControl(\"textarea\");\r\nconst maxLength = maxLengthValidate(1024);\r\n\r\nconst SendMessageForm = ({handleSubmit}) => {\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <Field\r\n        id=\"newMessageText\"\r\n        name=\"newMessageText\"\r\n        component={Textarea}\r\n        classElement={`textarea ${s.form__textarea}`}\r\n        placeholder='Введите сообщение...'\r\n        validate={[required, maxLength]}\r\n      />\r\n      <Button\r\n        text=\"Отправить\"\r\n        className={s.form__submit}\r\n      />\r\n    </form >\r\n  )\r\n}\r\n\r\nexport default reduxForm({ form: 'send-message' })(SendMessageForm);","export const getDialogsPage = (state) => state.dialogsPage;","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport './Dialogs.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\n\r\nimport { sendMessageAC } from '../../redux/dialogs/actions';\r\nimport withAuthRedirect from '../../utils/withAuthRedirect';\r\nimport SendMessageForm from './SendMessageForm/SendMessageForm';\r\nimport { getDialogsPage } from '../../redux/dialogs/selectors';\r\n\r\nconst Dialogs = () => {\r\n  const dispatch = useDispatch();\r\n  const dialogsPage = useSelector(getDialogsPage);\r\n\r\n  const dialogsElements = dialogsPage.dialogs.map(dialog =>\r\n    <DialogItem dialog={dialog} key={dialog.dialogid} />)\r\n\r\n  const messagesElements = dialogsPage.messages.map(message =>\r\n    <Message message={message} key={message.msgid} />)\r\n\r\n  const onSubmit = (formData) => {\r\n    dispatch(sendMessageAC(formData.newMessageText));\r\n  }\r\n\r\n  return (\r\n    <section className='dialogs'>\r\n      <div className='dialog-list'>\r\n        {dialogsElements}\r\n      </div>\r\n\r\n      <div className='chat-container'>\r\n        <div className='messages'>\r\n          {messagesElements}\r\n        </div>\r\n\r\n        <div className='new-message'>\r\n          <SendMessageForm onSubmit={onSubmit} />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default withAuthRedirect(Dialogs);","import { SEND_MESSAGE } from \"./actionTypes\";\r\n\r\nexport const sendMessageAC = (newMessageText) => ({\r\n  type: SEND_MESSAGE,\r\n  newMessageText,\r\n});\r\n"],"names":["_ref","dialog","path","dialogid","_jsx","NavLink","to","className","children","username","message","_jsxs","src","avatar","alt","text","Textarea","FormControl","maxLength","maxLengthValidate","reduxForm","form","handleSubmit","s","onSubmit","Field","id","name","component","classElement","placeholder","validate","required","Button","getDialogsPage","state","dialogsPage","withAuthRedirect","Dialogs","dispatch","useDispatch","useSelector","dialogsElements","dialogs","map","DialogItem","messagesElements","messages","Message","msgid","SendMessageForm","formData","newMessageText","type","SEND_MESSAGE"],"sourceRoot":""}